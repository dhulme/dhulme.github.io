import{_ as e,E as a,c as o,J as r,a3 as s,o as n}from"./chunks/framework.C3ruvn3z.js";const i="/assets/spotify-stats.B4LnAZal.png",g=JSON.parse('{"title":"Spotify Stats","description":"","frontmatter":{"date":"2019-10-18T00:00:00.000Z","title":"Spotify Stats"},"headers":[],"relativePath":"blog/spotify-stats.md","filePath":"blog/spotify-stats.md"}'),p={name:"blog/spotify-stats.md"},l=s('<p>Back in early 2018 I made a simple web app in Vue for viewing statistics about my Spotify playlists. It was more a proof of concept, and I never properly finished or released it. Fast forward to last week and I started reading about a new(ish) framework called <a href="https://svelte.dev" target="_blank" rel="noreferrer">Svelte</a>. It differs from React and Vue in that it doesn&#39;t use a virtual DOM, and instead compiles your code to lower level JavaScript that interacts with the DOM directly. A <a href="https://www.youtube.com/watch?v=AdNJ3fydeao" target="_blank" rel="noreferrer">great talk from the creator</a> explains how this is beneficial as the amount of nodes your app is rendering increases.</p><p>I thought rebuilding the Spotify stats app in Svelte would be a good opportunity to learn the framework and get the app to a nice polished state. I went with the <a href="https://bulma.io/" target="_blank" rel="noreferrer">Bulma</a> CSS-only framework to keep things simple, and because there aren&#39;t many component frameworks built for Svelte.</p><p>You can check out the app for yourself at <a href="https://dhulme.uk/spotify-stats" target="_blank" rel="noreferrer">dhulme.uk/spotify-stats</a>.</p><p><img src="'+i+'" alt="Spotify Stats"></p>',4);function f(c,d,h,m,_,u){const t=a("BlogPostHeader");return n(),o("div",null,[r(t),l])}const w=e(p,[["render",f]]);export{g as __pageData,w as default};
